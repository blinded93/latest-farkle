{"version":3,"sources":["logic/rules.js","logic/game.js","actions/modal.js","actions/auth.js","actions/scorecards.js","actions/games.js","actions/game.js","actions/turn.js","tools.js","components/game/RollBtn.js","components/game/BankBtn.js","components/game/Buttons.js","components/game/Scorecard.js","components/game/Score.js","components/game/Dice.js","components/game/DiceRow.js","components/game/MobileBoard.js","components/game/DesktopBoard.js","containers/CurrentGame.js","containers/Rules.js","components/games/DeleteRowBtn.js","components/games/GameCols.js","components/games/GameRows.js","components/games/LoadGamesBtn.js","containers/Games.js","actions/users.js","components/SignedOutNav.js","components/SignedInNav.js","components/MenuItems.js","components/Logout.js","components/newGame/NewGameColors.js","components/newGame/NewGameForm.js","components/newGame/NewGame.js","components/DeleteGame.js","components/game/ModalRollBtn.js","components/game/TurnChangeModal.js","components/DialogBody.js","components/Login.js","components/Signup.js","containers/modal/SessionBody.js","components/ModalTypeDecipher.js","containers/modal/Modal.js","components/Brand.js","containers/Nav.js","App.js","reducers/auth.js","reducers/modal.js","reducers/game.js","reducers/scorecards.js","reducers/turn.js","reducers/games.js","reducers/index.js","index.js"],"names":["scoreAccumulation","amounts","values","Object","filter","a","nonZeroAmountValues","sixScores","fiveOfKind","fourOfKind","threeOfKind","onesOrFives","reduce","sum","current","total","score","triplets","fourAndPair","threePair","straight","sixOfKind","splice","length","indexOf","index","valuesIndex","scorePer","one","five","keys","forEach","num","numberOf","rollTheDice","dice","selectedIndexes","map","d","i","includes","0","1","2","3","4","5","Math","round","random","toString","setAmounts","two","three","four","six","checkForScore","_scoreAccumulation","_scoreAccumulation2","slicedToArray","checkForFarkle","_scoreAccumulation3","modalShow","modalType","info","type","modalClose","authSuccess","user","authFailure","errors","createScorecards","players","updateScorecard","scorecard","token","isDone","id","player","dispatch","fetch","concat","method","headers","Accept","Content-Type","Authorization","body","JSON","stringify","then","resp","json","s","completeTurnAndBank","catch","error","message","loadGames","games","pagy","loadErrors","newGame","gameData","updateGame","game","gameInfo","callback","finishGame","objectWithoutProperties","winner","rollDice","selectedAndSavedDice","incrementRollCount","Promise","resolve","reject","newDice","rollDiceInterval","setInterval","setTimeout","clearInterval","remainingDice","_","noneBlankStringValues","obj","nonBlankValues","key","defineProperty","toLowerCase","isEmpty","connect","_ref","turn","currentGame","deselectAll","updateTotal","props","_props$turn","selectedDiceIndexes","savedDice","rollCount","inProgress","selectedDice","scoreCheck","toConsumableArray","Set","extraRoll","yes","no","react_default","createElement","Fragment","Button","onClick","e","style","width","variant","disabled","state","scorecardId","scorecards","currentPlayer","lastTurn","totalScore","selectedScore","localStorage","Buttons","game_RollBtn","game_BankBtn","updateScoreToBeat","scoreToBeat","changeToLastTurn","useEffect","player1","player2","abs","Tabs","activeKey","as","string","_scorecards$string","name","scoresPerTurn","Tab","eventKey","title","Table","borderless","size","className","Array","tableRows","lastPlayer","gameId","finalDice","unsavedDice","updateScore","displayedScore","display","diceFromIndexes","indexes","newScore","in_progress","current_player","color","selectDice","diceIndex","deselectDice","diceState","Number","split","parseInt","match","selectFunc","animationName","boardState","positions","RowOrCol","Row","Col","rowDiceState","slice","game_Dice","MobileBoard","game_DiceRow","game_Score","game_Scorecard","Navbar","fixed","expand","bg","game_Buttons","DesktopBoard","xl","lg","md","sm","xs","CurrentGame","window","innerWidth","updateWidth","_this","setState","addEventListener","this","Container","game_MobileBoard","game_DesktopBoard","Component","Rules","threeDiceCol","fontSize","stopPropagation","GameCols","card","react","list","updateScorecards","displayGame","lib","to","handleClick","progress","games_GameCols","games_DeleteRowBtn","LoadGamesBtn","getGames","nextPage","Games","_this$props","page","_this$props2","games_GameRows","games_LoadGamesBtn","ok","statusText","authenticate","credentials","closeModal","response","auth_token","setItem","clear","SignedOutNav","modalOpen","Nav","Link","SignedInNav","MenuItems","currentUser","components_SignedOutNav","components_SignedInNav","withRouter","logout","Modal","Body","history","replace","NewGameColors","playerNumber","onChange","colors","blue","red","green","yellow","teal","black","Form","Check","inline","value","NewGameForm","onSubmit","Group","Control","placeholder","Label","newGame_NewGameColors","NewGame","_e$target$name$split","target","_e$target$name$split2","attr","objectSpread","preventDefault","createGame","Header","closeButton","newGame_NewGameForm","Footer","form","auth","addGame","modal","modalInfo","deleteGame","completeTurnAndRoll","last_turn","last_player","changeCurrentPlayer","nextPlayer","sc","block","otherPlayer","winningPlayer","game_ModalRollBtn","DialogBody","components","Logout","TurnChangeModal","DeleteGame","SelectedComponent","Login","fields","_useState","useState","_useState2","passwordType","setPasswordType","isInvalid","InputGroup","Append","Text","Feedback","Signup","ifErrorsFor","field","required","SessionBody","username","email","identifier","password","createUser","login","signup","formComponent","SelectedForm","newUser","ModalTypeDecipher","modalShown","backdrop","show","onHide","aria-labelledby","centered","components_ModalTypeDecipher","Brand","Badge","Navigation","verifyUser","collapseOnSelect","components_Brand","Toggle","aria-controls","Collapse","components_MenuItems","modal_Modal","App","react_router_dom","containers_Nav","react_router","exact","path","component","initialState","isAuthenticated","isAuthenticating","areLoaded","combineReducers","arguments","undefined","action","_action$players","newScoresPerTurn","withDiceState","withoutDiceState","next","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.05efb3b8.chunk.js","sourcesContent":["// amounts is an object containing the count of each dice  eg. { 'one': 3 }\nconst nonZeroAmountValues = amounts => (\n  Object.values(amounts).filter(a => a !== 0)\n)\nconst total = amounts => (\n  Object.values(amounts).reduce((sum, current) => sum + current, 0)\n)\n\nexport const scoreAccumulation = amounts => {\n  const values = nonZeroAmountValues(amounts)\n  const score = (sixScores(amounts, values) ||\n          fiveOfKind(values)\n        + fourOfKind(values)\n        + threeOfKind(amounts, values)\n        + onesOrFives(amounts, values)\n  )\n\n  return [score, values]\n}\n\nconst sixScores = (amounts, values) => {\n  if (total(amounts) < 6) return false\n\n  const score = (triplets(values)\n                || fourAndPair(values)\n                || threePair(values)\n                || straight(values)\n                || sixOfKind(values)\n  )\n\n  if (score) values.splice(0, 6)\n  return score\n}\n\nconst triplets = values => (\n  values.length === 2 && values.indexOf(3) >= 0 ? 2500 : 0\n)\n\nconst fourAndPair = values => (\n  values.length === 2 && values.indexOf(4) >= 0 ? 1500 : 0\n)\n\nconst threePair = values => (\n  values.length === 3 && values[0] === values[1] ? 1500 : 0\n)\n\nconst straight = values => values.length === 6 ? 1500 : 0\n\nconst sixOfKind = values =>  values.length === 1 ? 3000 : 0\n\nconst fiveOfKind = values => {\n  const index = values.indexOf(5)\n  const score = index >= 0 ? 2000 : 0\n\n  if (score) values.splice(index, 1)\n  return score\n}\n\nconst fourOfKind = values => {\n  const index = values.indexOf(4)\n  const score = index >= 0 ? 1000 : 0\n\n  if (score) values.splice(index, 1)\n  return score\n}\n\nconst threeOfKind = (amounts, values) => {\n  const index = Object.values(amounts).indexOf(3)\n  const valuesIndex = values.indexOf(3)\n  let score\n\n  switch (index) {\n    case 0:\n      score = 300\n      break\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n     score = (index + 1) * 100\n      break\n    default:\n      score = 0\n  }\n\n  if (score) values.splice(valuesIndex, 1)\n  return score\n}\n\nconst onesOrFives = (amounts, values) => {\n  const scorePer = { one: 100, five: 50 }\n  let score = 0\n  Object.keys(scorePer).forEach(num => {\n    const numberOf = amounts[num]\n    const index = values.indexOf(numberOf)\n    if (numberOf > 0 && numberOf < 3) {\n      score += numberOf * scorePer[num]\n      values.splice(index, 1)\n    }\n  })\n  return score  \n}","import { scoreAccumulation } from './rules'\n\nconst indexToString = num => ({\n  '0': 'one',\n  '1': 'two',\n  '2': 'three',\n  '3': 'four',\n  '4': 'five',\n  '5': 'six'\n}[num.toString()])\n\nconst randomNum = () => Math.round(0 + Math.random() * 5)\n\nexport const rollTheDice = (dice, selectedIndexes) => (\n  dice.map((d, i) => (\n    selectedIndexes && selectedIndexes.includes(i)\n      ? d\n      : indexToString(randomNum())\n  ))\n)\n\nconst setAmounts = dice => {\n  const amounts = { one: 0, two: 0, three: 0, four: 0, five: 0, six: 0 }\n\n  dice.forEach(d => amounts[d] += 1)\n  return amounts\n}\n\nexport const checkForScore = dice => {\n  const amounts = setAmounts(dice)\n  const [score, values] = scoreAccumulation(amounts)\n\n  return values.length > 0 ? 0 : score\n}\n\nexport const checkForFarkle = dice => {\n  const amounts = setAmounts(dice)\n  const [score] = scoreAccumulation(amounts)\n\n  return score\n}","export const modalShow = (modalType, info) => {\n  return {\n    type: 'MODAL_SHOW',\n    modalType,\n    info\n  }\n}\n\nexport const modalClose = () => {\n  return {\n    type: 'MODAL_CLOSE'\n  }\n}","export const authRequest = () => {\n  return {\n    type: 'AUTH_REQUEST'\n  }\n}\n\nexport const authSuccess = user => {\n  return {\n    type: 'AUTH_SUCCESS',\n    user: user\n  }\n}\n\nexport const authFailure = errors => {\n  return {\n    type: 'AUTH_FAILURE',\n    errors: errors\n  }\n}\n\nexport const logout = () => {\n  return dispatch => {\n    localStorage.clear()\n    return dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}","import { authFailure } from './auth'\nimport { modalShow } from './modal'\n\nexport const createScorecards = players => ({\n  type: 'CREATE_SCORECARDS',\n  players\n})\n\nexport const updateScorecards = scorecards => ({\n  type: 'UPDATE_SCORECARDS',\n  scorecards\n})\n\nexport const updateScorecard = (scorecard, token, isDone) => {\n  const { id, player, score } = scorecard\n\n  return dispatch => {\n    if (!!token && id) {\n      return fetch(`/scorecards/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': token\n        },\n        body: JSON.stringify({ score, player })\n      })\n        .then(resp => resp.json())\n        .then(s => dispatch(completeTurnAndBank(score, player,isDone)))\n        .catch(error => dispatch(authFailure(error)))\n    } else {\n      dispatch(completeTurnAndBank(score, player,isDone))\n    }\n  }\n}\n\nconst completeTurnAndBank = (score, player, isDone) => {\n  const message = ` scored ${score} points!`\n\n  return dispatch => {\n    if (!isDone) dispatch(modalShow('TurnChangeModal', message))\n    dispatch({ type: 'UPDATE_SCORECARD', score: score , player: player })\n    dispatch({ type: 'RESET_ALL' })\n  }\n}","export const getGames = (page, token) => {\n  return dispatch => {\n    return fetch(`/games?page=${page}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    })\n      .then(resp => {\n        const json = resp.json()\n\n        return resp.ok\n          ? json\n          : Promise.reject(`${resp.statusText}, you must be logged in to do that.`)\n      })\n      .then(({ games, pagy }) => dispatch(loadGames(games, pagy)))\n      .catch(error => dispatch(loadErrors(error)))\n  }\n}\n\nconst loadGames = (games, pagy) => ({ type: 'LOAD_GAMES', games, pagy })\n\nconst loadErrors = error => ({ type: 'LOAD_ERROR', error })\n\nexport const addGame = game => ({ type: 'ADD_GAME', game })\n\nexport const deleteGame = (gameId, token) => {\n  return dispatch => {\n    return fetch(`/games/${gameId}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    })\n      .then(resp => {\n        const json = resp.json()\n        \n        return resp.ok ? json: Promise.reject(resp.statusText)\n      })\n      .then(game => dispatch({ type: 'DELETE_GAME', gameId: game.id }))\n      .catch(error => dispatch(loadErrors(error)))\n  }\n}","import { createScorecards, updateScorecard } from './scorecards'\nimport { addGame } from './games'\nimport { modalShow } from './modal'\n\nexport const createGame = (players, token) => {\n  return dispatch => {\n    if (!!token) {\n      return fetch('/games', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': token\n        },\n        body: JSON.stringify(players)\n      })\n        .then(resp => resp.json())\n        .then(game => {\n          const { scorecards, ...gameData } = game\n          \n          dispatch(newGame(gameData))\n          dispatch(addGame(game))\n          dispatch(createScorecards(players))\n        })\n    } else {\n      dispatch(newGame({ id: '00000' }))\n      dispatch(createScorecards(players))\n    }\n  }\n}\n\nconst newGame = gameData => ({ type: 'NEW_GAME', gameData})\n\nexport const changeCurrentPlayer = (game, token) => {\n  const current_player = game.currentPlayer === 'player1'\n    ? 'player2'\n    : 'player1'\n  const last_turn = !!game.lastTurn ? true : false\n  const gameData = { current_player, last_turn }\n  if (!!game.lastTurn) gameData.last_player = current_player\n  const callback = { type: 'CHANGE_CURRENT_PLAYER' }\n\n  return dispatch => {\n    dispatch(updateGame(game, gameData, token, callback))\n  }\n}\n\nconst updateGame = (game, gameInfo, token, callback) => {\n  return dispatch => {\n    if (!!token && game.id) {\n      return fetch(`/games/${game.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': token\n        },\n        body: JSON.stringify(gameInfo)\n      })\n        .then(resp => resp.json())\n        .then(game => {\n          dispatch(callback)\n        })\n    } else {\n      dispatch(callback)\n    }\n  }\n}\n\nexport const displayGame = game => ({ type: 'DISPLAY_GAME', game })\n\nexport const changeToLastTurn = () => ({ type: 'LAST_TURN' })\n\nexport const finishGame = (gameData, token, scorecard) => {\n  const { game, ...gameInfo } = gameData\n  const callback = { type: 'FINISH_GAME', winner: gameInfo.winner }\n\n  return dispatch => {\n    dispatch(updateGame(game, gameInfo, token, callback))\n\n    if (scorecard) {\n      const message = ` scored ${scorecard.score} points and wins!`\n      const isDone = true\n\n      dispatch(updateScorecard(scorecard, token, isDone))\n      dispatch(modalShow('TurnChangeModal', message))\n    }\n  }\n }","import { rollTheDice, checkForFarkle } from '../logic/game'\nimport { modalShow } from './modal'\nimport { changeCurrentPlayer } from './game'\n\nexport const farkle = () => ({ type: 'FARKLE' })\n\nexport const selectDice = diceIndex => ({ type: 'SELECT_DICE', diceIndex })\n\nexport const deselectDice = diceIndex => ({ type: 'DESELECT_DICE', diceIndex })\n\nexport const deselectAll = () => ({ type: 'DESELECT_ALL' })\n\nexport const updateScore = score => ({ type: 'UPDATE_SCORE', score })\n\nexport const updateTotal = () => ({ type: 'UPDATE_TOTAL' })\n\nexport const saveDice = () => ({ type: 'SAVE_DICE' })\n\nexport const rollDice = (dice, selectedAndSavedDice) => {\n  return dispatch => {\n    dispatch(incrementRollCount())\n\n    new Promise((resolve, reject) => {\n      let newDice\n      const rollDiceInterval = setInterval(() => {\n        newDice = rollTheDice(dice, selectedAndSavedDice)\n\n        dispatch({ type: 'SAVE_DICE', newDice })\n      }, 50)\n\n      setTimeout(() => {\n        clearInterval(rollDiceInterval)\n        const remainingDice = newDice.filter((_, i) => !selectedAndSavedDice.includes(i))\n\n        checkForFarkle(remainingDice)\n          ? resolve(newDice)\n          : reject(newDice)\n      }, 1000)\n    })\n      .then(newDice => dispatch({ type: 'UPDATE_FINAL_DICE' }))\n      .catch(newDice => {\n        const message = ' farkled!'\n        dispatch(modalShow('TurnChangeModal', message))\n        dispatch(farkle())\n      })\n  }\n}\n\nconst incrementRollCount = () => ({ type: 'INCREMENT_ROLL_COUNT' })\n\nexport const completeTurnAndRoll = (dice, game, token) => {\n  return dispatch => {\n    dispatch(changeCurrentPlayer(game, token))\n    dispatch({ type: 'RESET_ALL' })\n    dispatch(rollDice(dice, []))\n  }\n}\n\nexport const updateScoreToBeat = scoreToBeat => ({\n  type: 'SCORE_TO_BEAT', scoreToBeat\n})","export const noneBlankStringValues = (modalType, obj) => {\n  const nonBlankValues = {}\n\n  for (const key in obj) {\n    if (obj[key] !== '') {\n      nonBlankValues[key] = obj[key]\n    }\n  }\n\n  return { [modalType.toLowerCase()]: nonBlankValues }\n}\n\nexport const isEmpty = obj => (\n  obj && Object.keys(obj).length === 0\n)\n\nexport const renameKey = (oldKey, newKey, { [oldKey]: old, ...others }) => ({\n  [newKey]: old,\n  ...others\n})\n\nexport const colors = {\n  green: 'RGBA(0, 178, 67, .5)',\n  yellow: 'RGBA(247, 195, 0, .5)',\n  blue: 'darkblue'\n}","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { rollDice, deselectAll, updateTotal } from '../../actions/turn'\nimport { isEmpty } from '../../tools'\nimport { checkForScore } from '../../logic/game'\n\nconst RollBtn = props => {\n  const { dice, selectedDiceIndexes, savedDice, rollCount } = props.turn\n  const { inProgress } = props.currentGame\n  const { rollDice, updateTotal, deselectAll } = props\n  const selectedDice = dice.filter((_, i) => selectedDiceIndexes.includes(i))\n  const scoreCheck = checkForScore(selectedDice)\n  const selectedAndSavedDice = [\n    ...new Set([...selectedDiceIndexes, ...savedDice])\n  ]\n  const extraRoll = (yes, no) => selectedAndSavedDice.length === 6 && scoreCheck ? yes : no\n\n  const handleDisable = () => {\n    if (!inProgress) return true\n    else if (rollCount === 0) return false\n    else if (!isEmpty(selectedDiceIndexes)\n              && scoreCheck) return false\n    else if (isEmpty(selectedDiceIndexes)\n              || !scoreCheck) return true\n  }\n\n  const handleClick = e => {\n    if (rollCount === 0) deselectAll()\n    if (selectedAndSavedDice.length === 6) {\n      deselectAll()\n      rollDice(dice, [])\n    } else {\n      rollDice(dice, selectedAndSavedDice)\n    }\n    updateTotal()\n  }\n\n  return (\n    <>\n      <Button\n        onClick={handleClick}\n        style={{ width: '47%' }}\n        variant={extraRoll('success', 'outline-success')}\n        disabled={handleDisable()}>\n          {extraRoll('Roll Again!', 'Roll')}\n      </Button>\n    </>\n  )\n}\n\nconst mapStateToProps = ({ turn, currentGame }) => ({ turn, currentGame })\n\nexport default connect(mapStateToProps, { rollDice, deselectAll, updateTotal })(RollBtn)","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { updateScorecard } from '../../actions/scorecards'\n\nconst BankBtn = props => {\n  const { updateScorecard, currentPlayer, scorecardId, totalScore, lastTurn, inProgress } = props\n\n  const handleDisable = () => !inProgress || lastTurn || totalScore < 500\n\n  const handleClick = e => {\n    const scorecard = {\n      player: currentPlayer,\n      id: scorecardId,\n      score: totalScore\n    }\n\n    totalScore >= 500\n      && updateScorecard(scorecard, localStorage.token)\n  }\n\n  return (\n    <>\n      <Button\n        onClick={handleClick}\n        style={{ width: '47%' }}\n        variant=\"outline-danger\"\n        disabled={handleDisable()}>\n          Bank\n      </Button>\n    </>\n  )\n\n}\n\nconst mapStateToProps = state => {\n  const scorecardId = state.scorecards[state.currentGame.currentPlayer].id\n  \n  return {\n    inProgress: state.currentGame.inProgress,\n    lastTurn: state.currentGame.lastTurn,\n    currentPlayer: state.currentGame.currentPlayer,\n    totalScore: state.turn.totalScore + state.turn.selectedScore,\n    scorecardId\n  }\n}\n\nexport default connect(mapStateToProps, { updateScorecard })(BankBtn)","import React from 'react'\nimport RollBtn from './RollBtn'\nimport BankBtn from './BankBtn'\n\nconst Buttons = props => {\n  return (\n    <>\n      <RollBtn />\n      <BankBtn />\n    </>\n  )\n}\n\nexport default Buttons","import React, { useEffect } from 'react'\nimport { Button, Tabs, Tab, Table } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { updateScoreToBeat } from '../../actions/turn'\nimport { changeToLastTurn } from '../../actions/game'\n\nconst Scorecard = props => {\n  const { scorecards, currentPlayer, lastTurn,\n          updateScoreToBeat, changeToLastTurn } = props\n  const tableRows = scoresPerTurn => (\n    [...Array(7)].map((_, i) => (\n      <tr key={`row-${i}`}>\n        <td className='scores'>{scoresPerTurn[i]}</td>\n        <td className='scores'>{scoresPerTurn[i + 7]}</td>\n        <td className='scores'>{scoresPerTurn[i + 14]}</td>\n      </tr>\n    ))\n  )\n\n  useEffect(() => {\n    if (!lastTurn && scorecards[currentPlayer].score >= 10000) changeToLastTurn()\n\n    if (lastTurn) {\n      const { player1, player2 } = scorecards\n      const scoreToBeat = Math.abs(player1.score - player2.score)\n\n      updateScoreToBeat(scoreToBeat)\n    }\n  }, [lastTurn, scorecards, updateScoreToBeat, changeToLastTurn, currentPlayer])\n\n  return (\n    <>\n      <Tabs\n        variant='pills'\n        activeKey={currentPlayer}\n        id=\"player-scorecards\"\n        as={Button}>\n        {\n          Object.keys(scorecards).map((string, key) => {\n            const { name, score, scoresPerTurn } = scorecards[string]\n\n            return (\n              <Tab\n                key={key}\n                eventKey={`player${key + 1}`}\n                title={`${name} (${score})`}>\n                  <Table borderless size='sm' className='mt-2 text-center'>\n                    <tbody>\n                      {tableRows(scoresPerTurn)}\n                      <tr>\n                        <td></td><td></td><td className='text-right'><span className='font-weight-bold'>Total:</span>{`  ${score}`}</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n              </Tab>\n            )\n          })\n        }\n      </Tabs>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  lastTurn: state.currentGame.lastTurn,\n  scorecards: state.scorecards,\n  currentPlayer: state.currentGame.currentPlayer\n})\n\nexport default connect(mapStateToProps, { updateScoreToBeat, changeToLastTurn })(Scorecard)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { checkForScore, checkForFarkle } from '../../logic/game'\nimport { updateScore } from '../../actions/turn'\nimport { finishGame } from '../../actions/game'\n\nconst Score = props => {\n  const { finalDice, selectedDiceIndexes, selectedScore, totalScore,\n          updateScore, scoreToBeat, finishGame, currentPlayer, winner,\n          unsavedDice, scorecards, gameId, lastPlayer } = props\n  const scorecardId = scorecards[currentPlayer].id\n  const displayedScore = selectedScore + totalScore\n  const display = winner\n                    ? `${scorecards[winner].name} won!`\n                    : `Turn Score: ${displayedScore}`\n\n  useEffect(() => {\n    if (finalDice[0]) {\n      const diceFromIndexes = indexes => indexes.map(i => finalDice[i])\n      const score = checkForScore(diceFromIndexes(selectedDiceIndexes))\n\n      updateScore(score)\n      if (scoreToBeat && currentPlayer === lastPlayer) {\n        const newScore = checkForFarkle(diceFromIndexes(unsavedDice))\n                         + displayedScore\n        const scorecard = {\n          player: currentPlayer, score: newScore, id: scorecardId\n        }\n        const gameData = {\n          winner: currentPlayer, in_progress: false,\n          game: { id: gameId }, current_player: currentPlayer \n        }\n\n        newScore > scoreToBeat\n          && finishGame(gameData, localStorage.token, scorecard)\n      }\n    }\n  }, [updateScore, currentPlayer, finishGame, displayedScore, scorecardId,\n      selectedDiceIndexes, finalDice, scoreToBeat, unsavedDice, gameId, lastPlayer])\n\n  return (\n    <>\n      <h4 className='text-danger'>{display} &nbsp;&nbsp;<small>{lastPlayer && !winner && 'Last Turn!'}</small></h4>\n      \n    </>\n  )\n}\n\nconst mapStateToProps = ({ turn, currentGame, scorecards }) => {\n  return {\n    lastPlayer: currentGame.lastPlayer,\n    scorecards: scorecards,\n    gameId: currentGame.id,\n    winner: currentGame.winner,\n    currentPlayer: currentGame.currentPlayer,\n    scoreToBeat: turn.scoreToBeat,\n    finalDice: turn.finalDice,\n    unsavedDice: turn.unsavedDice,\n    selectedDiceIndexes: turn.selectedDiceIndexes,\n    savedDice: turn.savedDice,\n    selectedScore: turn.selectedScore,\n    totalScore: turn.totalScore\n  }\n  \n}\n\nexport default connect(mapStateToProps, { updateScore, finishGame })(Score)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { selectDice, deselectDice } from '../../actions/turn'\n\nconst Dice = props => {\n  const { id, num, selectDice, savedDice,\n          deselectDice, diceState,\n          rollCount, color, inProgress } = props\n          \n  const diceIndex = Number(id.split('-')[1])\n\n  const selectFunc = () => {\n    const index = parseInt(id.match(/\\d/)[0])\n\n    if (diceState === 'dice-on') {\n      selectDice(diceIndex)\n    } else if (diceState === 'dice-off' && !savedDice.includes(index)) {\n      deselectDice(diceIndex)\n    }\n  }\n\n  const handleSelect = () => {\n    rollCount > 0\n      && inProgress\n      && selectFunc()\n  }\n\n  return (\n    <>\n      <i\n        onClick={handleSelect}\n        style={{ 'animationName': diceState,\n                 'color': `${color}` }}\n        className={`hvr-grow-rotate dice fas fa-dice-${num}`}\n        id={id} />\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  savedDice: state.turn.savedDice,\n  inProgress: state.currentGame.inProgress,\n  rollCount: state.turn.rollCount,\n  color: state.scorecards[state.currentGame.currentPlayer].color\n})\n\nexport default connect(mapStateToProps, { selectDice, deselectDice })(Dice)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Col, Row } from 'react-bootstrap'\nimport Dice from './Dice'\n\nconst DiceRow = props => {\n  const { dice, diceState, boardState, positions } = props\n  const RowOrCol = boardState === 'desktop' ? Row : Col\n  const rowDiceState = diceState.slice(positions[0], positions[1])\n\n  return (\n    <>\n      {\n        dice.slice(positions[0], positions[1]).map((num, key) => (\n          <RowOrCol key={key + positions[0]}>\n            <Dice\n              diceState={rowDiceState[key]}\n              num={num}\n              id={`dice-${key + positions[0]}`} />\n          </RowOrCol>\n        ))\n      }\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  dice: state.turn.dice,\n  diceState: state.turn.diceState\n})\n\nexport default connect(mapStateToProps)(DiceRow)","import React from 'react'\nimport { Row, Col, Navbar } from 'react-bootstrap'\nimport Buttons from './Buttons'\nimport Scorecard from './Scorecard'\nimport Score from './Score'\nimport DiceRow from './DiceRow'\n\nconst MobileBoard = props => {\n  return (\n    <>\n      <Row>\n        <Col></Col>\n        <DiceRow boardState='mobile' positions={[0, 3]} />\n        <Col></Col>\n      </Row>\n      <Row className='mt-3'>\n        <Col></Col>\n        <DiceRow boardState='mobile' positions={[3]} />\n        <Col></Col>\n      </Row>\n      <Row className='mt-3'>\n        <Col>\n          <Score />\n          <Scorecard />\n        </Col>\n      </Row>\n      <Navbar fixed='bottom'\n        expand='sm'\n        bg='dark'\n        variant='dark'>\n        <Buttons />\n      </Navbar>\n    </>\n  )\n}\n\nexport default MobileBoard","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport Buttons from './Buttons'\nimport Scorecard from './Scorecard'\nimport Score from './Score'\nimport DiceRow from './DiceRow'\n\nconst DesktopBoard = props => {\n  return (\n    <>\n      <Row>\n        <Col xl={2} lg={2} md={1} sm={1} xs={0}></Col>\n        <Col className='sm-game-left' xl={1} lg={1} md={2} sm={2} xs={3}>\n          <DiceRow boardState='desktop' positions={[0]} />\n        </Col>\n        <Col xl={7} lg={7} md={8} sm={8} xs={8} className='ml-3'>\n          <Score />\n          <Scorecard />\n          <div className='mt-3 d-flex justify-content-between'>\n            <Buttons />\n          </div>\n        </Col>\n        <Col xs={1}></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default DesktopBoard","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport MobileBoard from '../components/game/MobileBoard'\nimport DesktopBoard from '../components/game/DesktopBoard'\nimport { connect } from 'react-redux'\n\nclass CurrentGame extends Component {\n  state = {\n    width: window.innerWidth,\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateWidth)\n  }\n\n  updateWidth = () => this.setState({ width: window.innerWidth })\n\n  render() {\n    const { currentGame } = this.props\n    const { width } = this.state\n\n    return (\n      <>\n        <Container>\n          {\n            width < 560\n              ? <MobileBoard\n                  currentGame={currentGame} />\n              : <DesktopBoard\n                  currentGame={currentGame} />\n          }\n        </Container>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = ({ currentGame }) => ({ currentGame })\n\nexport default connect(mapStateToProps)(CurrentGame)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nclass Rules extends Component {\n  threeDiceCol = (num, score) => (\n    <Col className='text-right pr-3'>\n      <i className={`rules-dice fas fa-dice-${num}`} />&nbsp;\n      <i className={`rules-dice fas fa-dice-${num}`} />&nbsp;\n      <i className={`rules-dice fas fa-dice-${num}`} />&nbsp;\n      = {score} pts.\n    </Col>\n  )\n\n  render() {\n    return (\n      <>\n        <Container>\n          <div className='pb-2 text-center'>\n            <u className='h2'>Rules</u>\n          </div>\n          <Row>\n            <Col>\n              <Row>\n                <Col>\n                  <div className='pb-2 text-center'>\n                    <b className='h4'>Scoring</b>\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col className='text-right'>\n                  <i className=\"rules-dice fas fa-dice-five\" /> FIVES = 50 points  &nbsp;\n                </Col>\n                <Col className='pl-4'>\n                  <i className=\"rules-dice fas fa-dice-one\" /> ONES = 100 points\n                </Col>\n              </Row>\n              <Row>\n                {this.threeDiceCol('one', 300)}\n                <Col className='border-left pl-3'>\n                  4 of any number = 1,000 pts.\n                </Col>\n              </Row>\n              <Row>\n                {this.threeDiceCol('two', 200)}\n                <Col className='border-left pl-3'>\n                  5 of any number = 2,000 pts.\n                </Col>\n              </Row>\n              <Row>\n                {this.threeDiceCol('three', 300)}\n                <Col className='border-left pl-3'>\n                  6 of any number = 3,000 pts.\n                </Col>\n              </Row>\n              <Row>\n                {this.threeDiceCol('four', 400)}\n                <Col className='border-left pl-3'>\n                  1-6 straight = 1,500 pts.\n                </Col>\n              </Row>\n              <Row>\n                {this.threeDiceCol('five', 500)}\n                <Col className='border-left pl-3'>\n                  Three pairs = 1,500 pts.\n                </Col>\n              </Row>\n              <Row>\n                {this.threeDiceCol('six', 600)}\n                <Col className='border-left pl-3'>\n                  Four of any number<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  with a pair = 1,500 pts.\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                </Col>\n                <Col className='border-left pl-3'>\n                  Two triplets = 2,500 pts.\n                </Col>\n              </Row>\n            </Col>\n            <Col>\n             <h4>Objective</h4>\n             <p>To score points through systematic rolling of the dice.</p>\n             <h5>How to Play</h5>\n             <p>The first player rolls 6 dice and selects (sets aside) any scoring dice that appear. Players can continue to roll the remaining dice for more points, setting aside a minimum of 1 scoring dice each turn. 500 points must be collected before points can be added to scorecard (banked). If a roll does not contain any scoring dice, the player has 'FARKLED' and loses points and turn.</p>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => { return state }\n\nexport default connect(mapStateToProps, {})(Rules)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { modalShow } from '../../actions/modal'\n\nconst DeleteRowBtn = ({ gameId, modalShow }) => {\n  const handleClick = e => {\n    e.stopPropagation()\n    modalShow('DeleteGame', gameId)\n  }\n\n  return (\n    <>\n      <td className='text-right'>\n        <span\n          className='pointer'\n          style={{fontSize: '20px'}}\n          onClick={handleClick}> \n            &#10005;\n        </span>\n      </td>\n    </>\n  )\n}\n\nexport default connect(null, { modalShow })(DeleteRowBtn)","import React, { Fragment } from 'react'\n\nconst GameCols = props => {\n  const { game } = props\n  const handleWinner = (name, winner) => {\n    return name === winner ? 'bg-danger text-light' : ''\n  }\n\n  return (\n    <>\n      <td>{game.id}</td>\n      {\n        game.scorecards.map(card => (\n            <Fragment key={`card-${card.id}`}>\n              <td\n                className={handleWinner(card.name, game.winner)}>\n                  {card.name}\n              </td>\n              <td>{card.score}</td>\n            </Fragment>\n          )\n        )\n      }\n    </>\n  )\n}\n\nexport default GameCols","import React, { Fragment } from 'react'\nimport { connect} from 'react-redux'\nimport DeleteRowBtn from './DeleteRowBtn'\nimport GameCols from './GameCols'\nimport { IndexLinkContainer } from 'react-router-bootstrap'\nimport { updateScorecards } from '../../actions/scorecards'\nimport { displayGame } from '../../actions/game'\n\nconst GameRows = props => {\n  const { games, updateScorecards, displayGame } = props\n  const handleProgress = progress => {\n    return progress ? 'table-success' : 'table-warning'\n  }\n  const handleClick = game => {\n    updateScorecards(game.scorecards)\n    displayGame(game)\n  }\n\n  return (\n    <>\n      {\n        !!games[0] &&\n        games.map(game => (\n          <Fragment key={`game-${game.id}`} >\n            <IndexLinkContainer to='/'>\n              <tr\n                id={`game-${game.id}`}\n                onClick={e => handleClick(game)}\n                className={handleProgress(game.inProgress) + ' pointer'}>\n                  <GameCols game={game} />\n                  <DeleteRowBtn gameId={game.id} />\n              </tr>\n            </IndexLinkContainer>\n          </Fragment>\n        ))\n      }\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({ games: state.games.list })\n\nexport default connect(mapStateToProps, { updateScorecards, displayGame })(GameRows)","import React from 'react'\nimport { Button } from 'react-bootstrap'\n\nconst LoadGamesBtn = props => {\n  const { getGames, games } = props\n  const handleClick = () => getGames(games.nextPage, localStorage.token)\n  \n  return (\n    <>\n      {\n        !!games.nextPage &&\n        <Button\n          className='text-center'\n          variant='outline-dark'\n          size='sm'\n          onClick={handleClick}>\n            Load More Games\n        </Button>\n      }\n    </>\n  )\n}\n\nexport default LoadGamesBtn","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Table } from 'react-bootstrap'\nimport { getGames } from '../actions/games'\nimport GameRows from '../components/games/GameRows'\nimport LoadMoreBtn from '../components/games/LoadGamesBtn'\n\nclass Games extends Component {\n  componentDidMount() {\n    const { games, getGames } = this.props\n\n    games.page === 0 && getGames(1, localStorage.token)\n  }\n\n  render() {\n    const { games, getGames } = this.props\n\n    return (\n      <>\n        <Container>\n          {\n            !games.list[0]\n              ? (<h5 className='text-center'>No games to display</h5>)\n              : (\n                  <>\n                    <Table\n                      borderless\n                      size='sm'>\n                      <thead>\n                        <tr>\n                          <th>ID</th>\n                          <th>Player 1</th>\n                          <th>Score</th>\n                          <th>Player 2</th>\n                          <th>Score</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <GameRows />\n                      </tbody>\n                    </Table>\n                    <div className='text-center'>\n                      <LoadMoreBtn\n                        getGames={getGames}\n                        games={games} />\n                    </div>\n                  </>\n                )\n          }\n        </Container>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = ({ games }) => ({ games })\n\nexport default connect(mapStateToProps, { getGames })(Games)","import { authRequest, authSuccess, authFailure } from './auth'\n\nexport const createUser = (credentials, closeModal) => {\n  const newUser = credentials\n\n  return dispatch => {\n    return fetch('/users', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(resp => resp.json())\n      .then(user => {\n        Object.keys(user.errors).length === 0\n          ? dispatch(authenticate({\n            identifier: newUser.email,\n            password: newUser.password\n          }, closeModal))\n          : dispatch(authFailure(user.errors))\n      })\n  }\n}\n\nexport const authenticate = (credentials, closeModal) => {\n  return dispatch => {\n    dispatch(authRequest())\n\n    return fetch('/auth_user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(resp => resp.json())\n      .then(response => {\n        if (response.auth_token) {\n          localStorage.setItem('token', response.auth_token)\n          localStorage.setItem('user', JSON.stringify(response.user))\n          dispatch(authSuccess(response.user))\n          !!closeModal && closeModal()\n        } else {\n          dispatch(authFailure(response.errors))\n          localStorage.clear()\n        }\n      })\n  }\n}\n\nexport const verifyUser = token => {\n  return dispatch => {\n    dispatch(authRequest())\n\n    return fetch('/verify_user', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    })\n      .then(resp => resp.json())\n      .then(response => {\n        if (response.errors) {\n          localStorage.clear()\n        } else {\n          dispatch(authSuccess(response.user))\n        }\n      })\n  }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { IndexLinkContainer, LinkContainer } from 'react-router-bootstrap'\n\nconst SignedOutNav = ({ modalOpen }) => {\n  return (\n    <>\n      <LinkContainer to='rules'>\n        <Nav.Link>\n          Rules\n        </Nav.Link>\n      </LinkContainer>\n      <span style={{'fontSize': 25, color: 'dark-brown'}}>|</span>\n      <IndexLinkContainer to='/'>\n        <Nav.Link onClick={e => modalOpen('Login')}>\n            Login\n        </Nav.Link>\n      </IndexLinkContainer>\n      <IndexLinkContainer to='/'>\n        <Nav.Link onClick={e => modalOpen('Signup')}>\n            Signup\n        </Nav.Link>\n      </IndexLinkContainer>\n    </>\n  )\n}\n\nexport default SignedOutNav","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { IndexLinkContainer, LinkContainer } from 'react-router-bootstrap'\n\nconst SignedInNav = ({ modalOpen }) => {\n  return (\n    <>\n      <IndexLinkContainer to='/'>\n        <Nav.Link>Home</Nav.Link>\n      </IndexLinkContainer>\n      <LinkContainer to='rules'>\n        <Nav.Link>Rules</Nav.Link>\n      </LinkContainer>\n      <LinkContainer to='games'>\n        <Nav.Link>Games</Nav.Link>\n      </LinkContainer>\n      <Nav.Link onClick={e => modalOpen('Logout')}>\n          Logout\n      </Nav.Link>\n    </>\n  )\n}\n\nexport default SignedInNav","import React from 'react'\nimport SignedOutNav from '../components/SignedOutNav'\nimport SignedInNav from '../components/SignedInNav'\n\nconst MenuItems = props => {\n  const { currentUser, modalShow } = props\n\n  return (\n    <>\n      {\n        Object.keys(currentUser).length === 0\n          ? ( <SignedOutNav modalOpen={modalShow} /> )\n          : ( <SignedInNav modalOpen={modalShow} /> )\n      }\n    </>\n  )\n}\n\nexport default MenuItems","import React from 'react'\nimport { logout } from '../actions/auth'\nimport { Button, Modal } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\n\nconst Logout = props => {\n  const { logout, modalClose } = props\n\n  const logoutAndClose = () => {\n    props.history.replace('/')\n    logout()\n    modalClose()\n  }\n\n  return (\n    <>\n      <Modal.Body>\n        <div className='text-center'>\n          <div className='mb-2'>Are you sure you want to logout?</div>\n          <Button\n            className='mr-1'\n            size='sm'\n            variant='outline-danger'\n            onClick={e => logoutAndClose()}>\n              Logout\n          </Button>\n          <Button\n            className='ml-1'\n            size='sm'\n            variant='outline-dark'\n            onClick={modalClose}>\n              Cancel\n          </Button>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}\n\nexport default withRouter(connect(null, { logout })(Logout))","import React from 'react'\nimport { Form } from 'react-bootstrap'\n\nconst NewGameColors = props => {\n  const { playerNumber, onChange } = props\n  const colors = {\n    'blue': 'primary',\n    'red': 'danger',\n    'green': 'success',\n    'yellow': 'warning',\n    'teal': 'info',\n    'black': 'dark'\n  }\n\n  return (\n    <>\n      {\n        Object.keys(colors).map(key => (\n          <Form.Check inline\n            key={key}\n            className={`badge pl-1 pt-1 pb-1 bg-${colors[key]}`}\n            type='radio'\n            name={`${playerNumber}.color`}\n            value={key}\n            onChange={e => onChange(e)} />\n        ))\n      }\n    </>\n  )\n}\n\nexport default NewGameColors","import React from 'react'\nimport { Form } from 'react-bootstrap'\nimport NewGameColors from './NewGameColors'\n\nconst NewGameForm = props => {\n  const { onChange, onSubmit } = props\n\n  return (\n    <>\n      <form\n        id='new-game-form'\n        onSubmit={e => onSubmit(e)}>\n        <Form.Group>\n          <Form.Control\n            name='player1.name'\n            type='text'\n            placeholder='Player 1'\n            onChange={e => onChange(e)} />\n        </Form.Group>\n        <Form.Label>\n          Player 1 color:\n        </Form.Label>\n        <Form.Group>\n          <NewGameColors\n            playerNumber='player1'\n            onChange={onChange} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n            name='player2.name'\n            type='text'\n            placeholder='Player 2'\n            onChange={e => onChange(e)} />\n        </Form.Group>\n        <Form.Label>\n          Player 2 color:\n        </Form.Label>\n        <Form.Group>\n          <NewGameColors\n            playerNumber='player2'\n            onChange={onChange} />\n        </Form.Group>\n      </form>\n    </>\n  )\n}\n\nexport default NewGameForm","import React, { Component } from 'react'\nimport { Button, Modal } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport NewGameForm from './NewGameForm'\nimport { createGame } from '../../actions/game'\n\nclass NewGame extends Component {\n  state = {\n    player1: {\n      name:'',\n      color:''\n    },\n    player2: {\n      name:'',\n      color:''\n    }\n  }\n\n  onChange = e => {\n    const [ player, attr ] = e.target.name.split('.')\n\n    this.setState({\n      [player]: {\n        ...this.state[player],\n        [attr]: e.target.value\n      }\n    })\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n    const { createGame } = this.props\n    \n    createGame(this.state, localStorage.token)\n    this.props.modalClose()\n  }\n\n  render() {\n    return (\n      <>\n        <Modal.Header closeButton>\n          <h5>New Game</h5>\n        </Modal.Header>\n        <Modal.Body>\n          <div className='text-center'>\n            <div className='mb-2'>\n              <NewGameForm\n                onChange={this.onChange}\n                onSubmit={this.onSubmit} />\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            form='new-game-form'\n            size='sm'\n            type='submit'\n            variant='outline-success'>\n              Create Game\n          </Button>\n        </Modal.Footer>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.auth.currentUser\n})\nexport default connect(mapStateToProps, { createGame })(NewGame)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { deleteGame } from '../actions/games'\nimport { modalClose } from '../actions/modal'\n\nconst DeleteGame = ({ gameId, deleteGame, modalClose }) => {\n  const handleClick = () => {\n    deleteGame(gameId, localStorage.token)\n    modalClose()\n  }\n  \n  return (\n    <>\n      <Modal.Header closeButton />\n      <Modal.Body>\n        <div className='text-center'>\n          <div className='mb-2'>Delete Game ID {gameId}?</div>\n          <Button\n            className='mr-1'\n            size='sm'\n            variant='outline-danger'\n            onClick={handleClick}>\n              Delete\n          </Button>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({ gameId: state.modal.modalInfo })\n\nexport default connect(mapStateToProps, { deleteGame, modalClose })(DeleteGame)","import React from 'react'\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux'\nimport { completeTurnAndRoll } from '../../actions/turn'\nimport { modalClose } from '../../actions/modal'\n\nconst ModalRollBtn = props => {\n  const { scorecards, currentPlayer, completeTurnAndRoll, modalClose, dice, game } = props\n  const nextPlayer = scorecards[Object.keys(scorecards).filter(sc => sc !== currentPlayer)[0]]\n  const handleClick = () => {\n    modalClose()\n    setTimeout(() =>{\n      completeTurnAndRoll(dice, game, localStorage.token)\n    }, 100)\n  }\n\n  return (\n    <>\n      <Button\n        block\n        variant='outline-success'\n        onClick={handleClick}>\n          {nextPlayer.name} Roll\n        </Button>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  game: state.currentGame,\n  dice: state.turn.dice,\n  currentPlayer: state.currentGame.currentPlayer,\n  scorecards: state.scorecards\n})\n\nexport default connect(mapStateToProps, { completeTurnAndRoll, modalClose })(ModalRollBtn)","import React, { useEffect } from 'react'\nimport { Modal, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux'\nimport { finishGame } from '../../actions/game'\nimport { modalClose } from '../../actions/modal'\nimport ModalRollBtn from './ModalRollBtn'\n\nconst TurnChangeModal = props => {\n  const { scorecards, currentPlayer, modalInfo, gameId, \n          lastTurn, winner, finishGame, modalClose, lastPlayer } = props\n  const name = () => {\n    const player = lastTurn && winner ? lastPlayer : currentPlayer\n\n    return scorecards[player].name\n  }\n\n  useEffect (() => {\n    if (lastTurn && modalInfo.includes('farkle')) {\n      const otherPlayer = currentPlayer === 'player1' ? 'player2' : 'player1'\n      const winningPlayer = modalInfo.includes('farkle')\n        ? otherPlayer\n        : currentPlayer\n      const gameData = {\n        winner: winningPlayer, game: { id: gameId }, in_progress: false\n      }\n      finishGame(gameData, localStorage.token)\n    }\n  }, [lastTurn])\n\n  return (\n    <>\n      <Modal.Header closeButton />\n      <Modal.Body className='text-center'>\n        <h5>{name()} {modalInfo}</h5>\n        {\n          lastTurn && modalInfo.includes('points!')\n            && (<h6 className='text-danger'>Last Chance!</h6>)\n        }\n      </Modal.Body>\n      <Modal.Footer>\n        {winner\n          ? <Button\n              block\n              variant='outline-info'\n              onClick={modalClose}>\n                Close\n            </Button>\n          : <ModalRollBtn />}\n      </Modal.Footer>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  lastPlayer: state.currentGame.lastPlayer,\n  gameId: state.currentGame.id,\n  lastTurn: state.currentGame.lastTurn,\n  winner: state.currentGame.winner,\n  modalInfo: state.modal.modalInfo, \n  currentPlayer: state.currentGame.currentPlayer,\n  scorecards: state.scorecards\n})\n\nexport default connect(mapStateToProps, { finishGame, modalClose })(TurnChangeModal)","import React from 'react'\nimport Logout from './Logout'\nimport NewGame from './newGame/NewGame'\nimport DeleteGame from './DeleteGame'\nimport TurnChangeModal from './game/TurnChangeModal'\n\nconst DialogBody = props => {\n  const components = {\n    'Logout': Logout,\n    'NewGame': NewGame,\n    'TurnChangeModal': TurnChangeModal,\n    'DeleteGame': DeleteGame\n  }\n  const { modalClose, modalType } = props\n  const SelectedComponent = components[modalType]\n\n  return (\n    <>\n      {<SelectedComponent modalClose={modalClose} />}\n    </>\n  )\n}\n\nexport default DialogBody","import React, { useState } from 'react'\nimport { Button, Form, InputGroup } from 'react-bootstrap'\n\nconst Login = props => {\n  const { onChange, onSubmit, fields, errors } = props\n  const [ passwordType, setPasswordType ] = useState('password')\n  const togglePasswordType = () => {\n    passwordType === 'password'\n      ? setPasswordType('text')\n      : setPasswordType('password')\n  }\n  \n  return (\n    <>\n      <form\n        onSubmit={e => onSubmit(e, fields)}>\n        <Form.Group>\n          <Form.Control\n            isInvalid={errors.length > 0}\n            type='text'\n            name='identifier'\n            onChange={onChange}\n            placeholder='Username or Email' />\n        </Form.Group>\n        <InputGroup\n          className='form-group'>\n          <Form.Control\n            isInvalid={errors.length > 0}\n            type={passwordType}\n            name='password'\n            onChange={onChange}\n            placeholder='Password' />\n          <InputGroup.Append>\n            <InputGroup.Text\n              onClick={togglePasswordType}>\n              {\n                passwordType === 'password'\n                  ? <i className=\"fas fa-eye\" />\n                  : <i className=\"far fa-eye\" />\n              }\n            </InputGroup.Text>\n          </InputGroup.Append>\n          <Form.Control.Feedback\n            type='invalid'>{errors}\n          </Form.Control.Feedback>\n        </InputGroup>\n        <Button\n          block\n          variant='outline-dark'\n          type='submit'>\n            Login\n        </Button>\n      </form>\n    </>\n  );\n}\n\nexport default Login","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst Signup = props => {\n  const { onChange, onSubmit, fields } = props\n  const { errors } = props\n  const ifErrorsFor = field => !!errors && errors[field]\n\n  return (\n    <>\n      <form\n        onSubmit={e => onSubmit(e, fields)}>\n        <Form.Group>\n          <Form.Control\n            required\n            isInvalid={ifErrorsFor('username')}\n            type='text'\n            name='username'\n            onChange={onChange}\n            placeholder='Username' />\n          <Form.Control.Feedback\n            type='invalid'>Username {ifErrorsFor('username')}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n            required\n            isInvalid={ifErrorsFor('email')}\n            type='email'\n            name='email'\n            onChange={onChange}\n            placeholder='Email' />\n          <Form.Control.Feedback\n            type='invalid'>Email {ifErrorsFor('email')}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n            required\n            isInvalid={ifErrorsFor('password')}\n            type='password'\n            name='password'\n            onChange={onChange}\n            placeholder='Password' />\n          <Form.Control.Feedback\n            type='invalid'>Password {ifErrorsFor('password')}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          block\n          variant='outline-dark'\n          type='submit'>\n          Signup\n        </Button>\n      </form>\n    </>\n  )\n}\n\nexport default Signup","import React, { Component } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport Login from '../../components/Login'\nimport Signup from '../../components/Signup'\nimport { createUser, authenticate } from '../../actions/users'\nimport { connect } from 'react-redux'\nimport { noneBlankStringValues } from '../../tools'\n\nclass SessionBody extends Component {\n  state = {\n    username: '',\n    email: '',\n    identifier: '',\n    password: ''\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  onSubmit = (e, fields) => {\n    const { createUser, authenticate, modalClose } = this.props\n    e.preventDefault()\n\n    !!fields.login\n      ? authenticate(fields.login, modalClose)\n      : createUser(fields.signup, modalClose)\n  }\n\n  formComponent = form => {\n    const { errors, modalType } = this.props\n\n    if (form) {\n      const formComponents = { 'Login': Login, 'Signup': Signup }\n      const SelectedForm = formComponents[form]\n\n      return <SelectedForm\n              fields={noneBlankStringValues(modalType, this.state)}\n              onChange={this.onChange}\n              onSubmit={this.onSubmit}\n              errors={errors} />\n    }\n  }\n\n  render() {\n    const { modalType } = this.props\n\n    return (\n      <>\n        <Modal.Header closeButton><strong>{modalType}</strong></Modal.Header>\n        <Modal.Body>\n          {this.formComponent(modalType)}\n        </Modal.Body>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => state.auth\n\nexport default connect(mapStateToProps, { createUser, authenticate })(SessionBody)","import React from 'react'\nimport DialogBody from '../components/DialogBody'\nimport SessionBody from '../containers/modal/SessionBody'\n\nconst ModalTypeDecipher = props => {\n  const components = {\n    'Login': SessionBody,\n    'Signup': SessionBody,\n    'NewGame': DialogBody,\n    'Logout': DialogBody,\n    'TurnChangeModal': DialogBody,\n    'DeleteGame': DialogBody\n  }\n  const SelectedComponent = components[props.modalType]\n\n  return (\n    <>\n      <SelectedComponent {...props} />\n    </>\n  )\n}\n\nexport default ModalTypeDecipher","import React from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { modalShow, modalClose } from '../../actions/modal'\nimport ModalTypeDecipher from '../../components/ModalTypeDecipher'\n\nconst MainModal = props => {\n  const { modalShown, modalClose } = props\n\n  return (\n    <Modal\n      backdrop='static'\n      show={modalShown}\n      onHide={modalClose}\n      size=\"sm\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered>\n        <ModalTypeDecipher {...props} />\n    </Modal>\n  )\n}\n\nconst mapStateToProps = state => state.modal\n\nexport default connect(mapStateToProps, { modalShow, modalClose })(MainModal)","import React from 'react'\nimport { Navbar, Nav, Badge } from 'react-bootstrap'\nimport { IndexLinkContainer } from 'react-router-bootstrap'\n\nconst Brand = props => {\n  const { modalOpen } = props\n\n  return (\n    <>\n      <Navbar.Brand>\n        <IndexLinkContainer to='/'>\n          <Nav.Link className='d-inline'>Farkle</Nav.Link>\n        </IndexLinkContainer>\n        <small>\n          <Badge\n            className='ml-2 pointer'\n            onClick={e => modalOpen('NewGame')}\n            variant='secondary'>\n              New\n          </Badge>\n        </small>\n      </Navbar.Brand>\n    </>\n  )\n}\n\nexport default Brand","import React, { Component } from 'react'\nimport { Nav, Navbar } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { modalShow } from '../actions/modal'\nimport { authSuccess } from '../actions/auth'\nimport { verifyUser } from '../actions/users'\nimport MenuItems from '../components/MenuItems'\nimport MainModal from './modal/Modal'\nimport Brand from '../components/Brand'\n\nclass Navigation extends Component {\n  componentDidMount() {\n    const { verifyUser } = this.props\n    const user = localStorage.user\n\n    !!user && verifyUser(localStorage.token)\n  }\n\n  render () {\n    const { currentUser, errors, modalShow } = this.props\n\n    return (\n      <>\n        <Navbar\n          fixed='top'\n          collapseOnSelect\n          expand='sm'\n          bg='dark'\n          variant='dark'>\n            <Nav className='mr-auto'>\n              <Brand modalOpen={modalShow} />\n            </Nav>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className='ml-auto'>\n                <MenuItems\n                  currentUser={currentUser}\n                  modalShow={modalShow} />\n              </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n        <MainModal errors={errors} />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => state.auth\n\nexport default connect(mapStateToProps, { modalShow, authSuccess, verifyUser })(Navigation)","import React from 'react';\nimport './App.css';\nimport CurrentGame from './containers/CurrentGame'\nimport Rules from './containers/Rules'\nimport Games from './containers/Games'\nimport Nav from './containers/Nav'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n      <Switch>\n        <Route exact path='/' component={CurrentGame} />\n        <Route path='/rules' component={Rules} />\n        <Route path='/games' component={Games} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const initialState = {\n  isAuthenticated: false,\n  isAuthenticating: false,\n  currentUser: {},\n  errors: []\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n\n    case 'AUTH_REQUEST':\n      return {\n        ...state,\n        isAuthenticating: true\n      }\n\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        isAuthenticated: true,\n        isAuthenticating: false,\n        currentUser: action.user\n      }\n    \n    case 'AUTH_FAILURE':\n      return {\n        ...initialState,\n        errors: action.errors || []\n      }\n\n    case 'LOGOUT':\n      return initialState\n\n    default:\n      return state\n  }\n}","const initialState = {\n  modalShown: false,\n  modalType: '',\n  modalInfo: ''\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'MODAL_SHOW':\n      return {\n        modalShown: true,\n        modalType: action.modalType,\n        modalInfo: action.info\n      }\n\n    case 'MODAL_CLOSE':\n      return {\n        ...state,\n        modalShown: false,\n      }\n\n    default:\n      return state\n  }\n}","const initialState = {\n  id: null,\n  inProgress: true,\n  winner: null,\n  currentPlayer: 'player1',\n  lastPlayer: null,\n  lastTurn: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'NEW_GAME':\n      const id = action.gameData.id || state.id\n\n      return { ...state, id }\n\n    case 'CHANGE_CURRENT_PLAYER':\n      const currentPlayer = state.currentPlayer === 'player1'\n        ? 'player2'\n        : 'player1'\n\n      return { ...state, currentPlayer: currentPlayer }\n      \n    case 'DISPLAY_GAME':\n      return action.game\n\n    case 'LAST_TURN':\n      const lastPlayer = state.currentPlayer === 'player1' ? 'player2' : 'player1'\n\n      return { ...state, lastTurn: true, lastPlayer }\n      \n    case 'FINISH_GAME':\n      return {\n        ...state,\n        winner: action.winner,\n        inProgress: false\n      }\n\n    default:\n      return state\n  }\n}","const initialState = {\n  player1: {\n    id: null,\n    name: 'Player1',\n    color: 'dark',\n    score: 0,\n    scoresPerTurn: []\n  },\n  player2: {\n    id: null,\n    name: 'Player2',\n    color: 'dark',\n    score: 0,\n    scoresPerTurn: []\n  }\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'CREATE_SCORECARDS':\n      const { player1, player2 } = action.players\n\n      return {\n        player1: {\n          ...state.player1, ...player1\n        },\n        player2: {\n          ...state.player2, ...player2\n        }\n      }\n\n    case 'UPDATE_SCORECARDS':\n      return {\n        player1: {\n          ...action.scorecards[0]\n        },\n        player2: {\n          ...action.scorecards[1]\n        }\n      }\n\n    case 'UPDATE_SCORECARD':\n      const { player, score } = action\n      const newScoresPerTurn = [ ...state[player].scoresPerTurn, score ]\n\n      return {\n        ...state,\n        [player]: {\n          ...state[player],\n          score: newScoresPerTurn.reduce((sum, current) => sum + current, 0),\n          scoresPerTurn: newScoresPerTurn\n        }\n      }\n\n    default:\n      return state\n  }\n}","const initialState = {\n  rollCount: 0,\n  selectedDiceIndexes: [],\n  savedDice: [],\n  unsavedDice: [0, 1, 2, 3, 4, 5],\n  totalScore: 0,\n  selectedScore: 0,\n  dice: ['one', 'two', 'three', 'four', 'five', 'six'],\n  finalDice: [],\n  scoreToBeat: 0,\n  diceState: ['dice-on', 'dice-on', 'dice-on', 'dice-on', 'dice-on', 'dice-on']\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n\n    case 'FARKLE':\n      return {\n        ...initialState,\n        totalScore: state.totalScore,\n        dice: state.dice,\n        diceState: state.diceState\n      }\n\n    case 'RESET_ALL':\n      return { ...initialState, dice: state.dice }\n      \n    case 'CONTINUE':\n      return {\n        ...initialState,\n        score: state.totalScore,\n        rollCount: state.rollCount\n      }\n\n    case 'SELECT_DICE':\n      const withDiceState = state.diceState.map((s, i) => (\n        i === action.diceIndex ? 'dice-off' : s\n      ))\n\n      return {\n        ...state,\n        diceState: withDiceState,\n        unsavedDice: state.unsavedDice.filter(d => d !== action.diceIndex),\n        selectedDiceIndexes: [...state.selectedDiceIndexes, action.diceIndex]\n      }\n\n    case 'DESELECT_DICE':\n      const withoutDiceState = state.diceState.map((s, i) => (\n        i === action.diceIndex ? 'dice-on' : s\n      ))\n      const dice = state.savedDice.includes(action.diceIndex)\n        ? state.selectedDiceIndexes\n        : state.selectedDiceIndexes.filter(i => i !== action.diceIndex)\n\n      return {\n        ...state,\n        diceState: withoutDiceState,\n        unsavedDice: [ ...state.unsavedDice, action.diceIndex ],\n        selectedDiceIndexes: dice\n      }\n\n    case 'DESELECT_ALL':\n      return {\n        ...state,\n        selectedDiceIndexes: [],\n        savedDice: [],\n        unsavedDice: initialState.unsavedDice,\n        diceState: initialState.diceState\n      }\n\n    case 'UPDATE_SCORE':\n      return { ...state, selectedScore: action.score }\n      \n    case 'UPDATE_TOTAL':\n      return {\n        ...state,\n        selectedScore: 0,\n        totalScore: state.totalScore + state.selectedScore\n      }\n\n    case 'SCORE_TO_BEAT':\n      return { ...state, scoreToBeat: action.scoreToBeat }\n\n    case 'SAVE_DICE':\n      return {\n        ...state,\n        selectedDiceIndexes: [],\n        savedDice: [ ...state.savedDice, ...state.selectedDiceIndexes ],\n        finalDice: [],\n        dice: action.newDice\n      }\n\n    case 'UPDATE_FINAL_DICE':\n      return { ...state, finalDice: state.dice }\n\n    case 'INCREMENT_ROLL_COUNT':\n      return { ...state, rollCount: state.rollCount + 1 }\n\n    default:\n      return state\n  }\n}","const initialState = {\n  areLoaded: false,\n  error: '',\n  page: 0,\n  nextPage: 2,\n  list: []\n}\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_GAMES':\n      return {\n        ...state,\n        areLoaded: true,\n        page: action.pagy.page,\n        nextPage: action.pagy.next,\n        list: [ ...state.list, ...action.games ]\n      }\n\n    case 'DELETE_GAME':\n      return {\n        ...state,\n        list: state.list.filter(game => action.gameId !== game.id)\n      }\n    \n    case 'ADD_GAME':\n      return {\n        ...state,\n        list: [ ...state.list, action.game ]\n      }\n\n    case 'LOAD_ERROR':\n      return {\n        ...state,\n        areLoaded: false,\n        error: action.error\n      }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport auth from './auth'\nimport modal from './modal'\nimport currentGame from './game'\nimport scorecards from './scorecards'\nimport turn from './turn'\nimport games from './games'\n\nexport default combineReducers({\n  auth,\n  modal,\n  currentGame,\n  scorecards,\n  turn,\n  games\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers/index'\n\nconst store = createStore(reducers, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}